services:

  nginx:
    image: nginx:alpine
    container_name: ${APP_NAME}__nginx
    hostname: ${APP_NAME}__nginx
    restart: unless-stopped
    platform: linux/arm64
    build:
      context: docker
      dockerfile: dev/nginx/Dockerfile
    ports:
      - 80:80
    volumes:
      - ./:/app
    working_dir: /app
    depends_on:
      - php

  php:
    build: ./docker/dev/php/
    container_name: ${APP_NAME}__php
    hostname: ${APP_NAME}__php
    working_dir: /app
    volumes:
      - ./:/app/
      - ./storage/framework/tmp:/tmp
      - ./docker/dev/php/.bashrc:/root/.bashrc
      - ./docker/dev/php/.bash_aliases:/root/.bash_aliases
    environment:
      TERM: xterm-256color
      COMPOSER_ALLOW_SUPERUSER: 1
      XDEBUG_CONFIG: "client_host=${DOCKER_ADDRESS}"
      PHP_IDE_CONFIG: "serverName=${APP_NAME}"
    depends_on:
      - db
      - redis

  db:
    image: &db-image postgres:16
    container_name: ${APP_NAME}__db
    hostname: ${APP_NAME}__db
    platform: linux/arm64
    ports:
      - ${DB_PORT}:${DB_PORT}
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data/
    command: >
      sh -c "exec docker-entrypoint.sh postgres &&
      psql -U ${DB_USERNAME} -d ${DB_DATABASE} -c 'ALTER DATABASE ${DB_DATABASE} REFRESH COLLATION VERSION;'"
    healthcheck:
      test: pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}
      interval: 5s
      timeout: 10s
      retries: 20

  db_test:
    image: *db-image
    container_name: ${APP_NAME}__db_test
    hostname: ${APP_NAME}__db_test
#    platform: linux/arm64
    restart: unless-stopped
    # розширюємо кількість одночасних підключень до Postgres БД та кількість транзакцій. Важливо для комфортного запуску паралельних тестів.
    command: postgres -c 'max_connections=250' -c 'max_locks_per_transaction=128'
    ports:
      - 5433:5432
    environment:
      POSTGRES_DB: db_test
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - /var/lib/postgresql/data

  redis:
    image: redis:alpine
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    container_name: ${APP_NAME}__redis
    hostname: ${APP_NAME}__redis
    platform: linux/arm64
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - redis_data:/data
    healthcheck:
      test: redis-cli ping
      interval: 5s
      timeout: 10s
      retries: 20

#  mailer:
#    image: mailhog/mailhog:latest
#    container_name: ${APP_NAME}__mailer
#    hostname: ${APP_NAME}__mailer
#    ports:
#      - ${DOCKER_ADDRESS}:8025:8025
#      - ${DOCKER_ADDRESS}:1025:1025

volumes:
  db_data:
    driver: local
    name: ${APP_NAME}_db_data
  redis_data:
    driver: local
    name: ${APP_NAME}_redis_data
